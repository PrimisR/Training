/**
 * 最大流 Maximum Flow
 * 1.最大流问题描述：
 * 给定一个有向图，对于其中的每条边，都有一定的容量；在所有点中有一个源点，有一个汇点
 * 源点的输入流量不限，求汇点输出流量的最大值
 * 
 * 2.流的定义
 * f(u,v)称为节点u到节点v的流，流的值|f|定义为:
 * 从原点流出的总流量减去从原点流入的总流量
 * 源节点s，汇点t
 * 3.流的性质
 * 
 * 1.容量限制，0<=f(u,v)<=c(u,v);
 * 2.流量守恒，除了源点和汇点以外，其他结点均不产生流也不消耗流，流入=流出
 * 
 * 4.流网络的两种情况
 * 1.包含反平行边:将反平行边加入一个点，两条权值不变的边，构造出不包含反平行边的流网络
 * 2.多个源结点和汇结点的网络:构造超级源节点或汇结点，连接容量为无穷大
 * 
 * 5.Ford-Fulkerson方法
 * 1.残存网络:可以具有反平行边
 * 容量定义:
 * c_f(u,v) = c(u,v)-f(u,v) (if (u,v) in E)
 *          = f(v,u) (if (v,u) in E)
 *          = 0 else
 * 2.增广路径:在残存网络中找到一条从s到达t的路径
 * c_f(p)={min(c_f(u,v))|(u,v) in p)}
 * f_p(u,v)=c_f(p) (if (u,v) in p)
 *         =0 else
 * 推论26.3 可以证明如果递增增广路径流可以不断增加整个流的值，使之不断接近最大值
 * 3.切割
 * 一个切割指将点集V划分为包含s的集合S和T=V-S两个部分，使得s in S，t in T
 * 对于一个切割来说，
 * 净流量:S向T流出的总流量减去T向S流出的总流量，
 * 容量:S到T中所有点的总容量之和，不考虑T到S的总容量之和，
 * (虽然定义中存在不对称性，实际上有意为之)
 * 最小切割为容量最小的切割
 * 
 * 引理26.4 对于任意切割，横跨切割的净流量为f(S,T)=|f|
 * 推论26.5 流网络中的任意流不超过任意切割的容量
 * 定理26.6 下面三个条件等价:
 * 1.f是G的一个最大流(1->2反证,增广路径增加流值)
 * 2.残存网路G中不包含增广路径(2->3构造s能到达的点集和到达t的点集，成为切割(S,T),证明f(S,T)=c(S,T))
 * 3.|f|=c(S,T)，(S,T)是网络中某个切割(3->1，根据推论26.5，如果等于某个切割，那么一定是最小切割)
 * 
 * 基本的Ford-Fulkerson算法
 * 每次迭代中，寻找某条增广路径p，然后使用p对流f进行增加
 * */


